# -*- coding: utf-8 -*-
"""Zindi Final Project

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nJsbVGf-i17YG3D7o1JkNpdURVBOKsRx

# Image Classification

Intro

# Setup

Here we install the latest version of the library and copy in our data.

your data may come in a few different formats. The most common is to have the different classes, each
"""

!pip install -q --upgrade fastcore fastai

!mkdir pics # Create a folder for our data
!cp -r 'drive/My Drive/Pictures' images/train # Copy from Drive

"""# Create our DataLoaders

This is the tricky part, but once your data is in dataloaders you're good to go. 

Here, we use the from_folder convenience function, but we'll explore soe different ways as well.

from_folder expecs images/train and images/val but we only have a single folder with all our data. So, we specify the 'train' parameter and tell it to do a random split to get a validation set (val_pct=0.2)
"""

from fastai.vision.all import *

dls = ImageDataLoaders.from_folder(path='train', valid_pct=0.2, item_tfms=Resize(224), )

dls.show_batch()

"""# Training the Model"""

learn = cnn_learner(dls, resnet18, metrics=error_rate)

learn.lr_find()

learn.fit_one_cycle(1, lr_max=0.002)

learn.save('stage-1')

learn.unfreeze()
learn.lr_find()

learn.fit_one_cycle(5, lr_max=slice(0.5e-4, 0.5e-3))

# learn.fine_tune(3)

learn.show_results()

"""

*   What is the 'resnet34' thing?
*   What are we doing here exactly?
*   How can we make it better
...

"""

learn.predict('/content/IMG_20200807_075733_1.jpg')

interp = Interpretation.from_learner(learn)